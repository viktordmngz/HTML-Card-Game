/* --CURRENTLY INCOMPLETE--
Start Date: 09/09/2024 (MM/DD/YYYY)
Last Updated: 09/11/2024 (MM/DD/YYYY)
Originally Coded By: Gavin Lon (https://github.com/GavinLonDigital/HuntTheAceJSGame)
  Followed the JavaScript Tutorial on YouTube (https://youtu.be/Bj6lC93JMi0?si=IImtSoFegHA4P-Du)

This is part of my development as a web developer. I chose this project as a starting point and will
be designing my own card game using what I have learned from this tutorial.

While I did follow the tutorial, I did change a few names of the variables and functions because they were
a little too cumbersome in the video.

Please enjoy and check the original source GitHub repository (linked above) to see if there are any licenses
on the use of this code.
*/

:root{
  /* Creating variables */
  --card-width:160px;
  --card-height: 220px;
  --num-cards: 4;
  --card-horizontal-space: 100px;
}

body{
  height: 100vh;
}

main{
  height: 55%;
  display: flex;
  justify-content: center;
  border: 1px solid #059665cb;
}

.card-container{
  /* Parent container to hold the card; Used as a buffer */
  position: relative;
  height: 100%;
  width: calc(var(--card-width) * (var(--num-cards)/2) + var(--card-horizontal-space));
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 1fr;
  grid-template-areas: "a b"
                       "c d";
  border: 1px solid #059665cb;
}

.card-pos-a{
  grid-area: a;
  border: 1px solid #059665cb;
  background-color: mediumturquoise;

}
.card-pos-b{
  grid-area: b;
  border: 1px solid #059665cb;
  background-color: cadetblue;
}
.card-pos-c{
  grid-area: c;
  border: 1px solid #059665cb;
  background-color: saddlebrown;
}
.card-pos-d{
  grid-area: d;
  border: 1px solid #059665cb;
  background-color: burlywood;
}

/* Centers the cards within their div containers */
.card-pos-a, .card-pos-b, .card-pos-c, .card-pos-d {
  display: flex;
  justify-content: center;
  align-items: center;
}

.card{
  /* Holds the card-front and card-back classes */
  position: absolute;
  height: var(--card-height);
  width: var(--card-width);
  /* Sets how far the camera is set for the transition */
    /* Try adding and removing 0's (and also increase the transform time): */
  perspective: 1000px;
  cursor: pointer;
}

.card-inner{
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 1.25s;
  transform-style: preserve-3d;
}

.card-front, .card-back {
  /* Stacking the card back with the card front */
    /* Try switching position to "relative" and see what happens: */
  position: absolute;
  width: 100%;
  height: 100%;
  /* Hides the back of the card from view */
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;

  /* Try using these lines instead and see what happens: */
  /* -webkit-backface-visibility: visible; */
  /* backface-visibility: visible; */
}

.card-img {
  height: 100%;
}

.card-back{
  transform: rotateY(180deg);
}

.card:hover .card-inner{
  transform: rotateY(180deg);
}

.card-inner.flip-it{
  transform: rotateY(180deg);
}
