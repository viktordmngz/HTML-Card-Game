/*
Start Date: 09/09/2024 (MM/DD/YYYY)
Last Updated: 09/25/2024 (MM/DD/YYYY)
Originally Coded By: Gavin Lon (https://github.com/GavinLonDigital/HuntTheAceJSGame)
  Followed the JavaScript Tutorial on YouTube (https://youtu.be/Bj6lC93JMi0?si=IImtSoFegHA4P-Du)

This is part of my development as a web developer. I chose this project as a starting point and will
be designing my own card game using what I have learned from this tutorial.

While I did follow the tutorial, I did change a few names of the variables and functions because they were
a little too cumbersome in the video.

Please enjoy and check the original source GitHub repository (linked above) to see if there are any licenses
on the use of this code.
*/


@import url('https://fonts.googleapis.com/css2?family=Quicksand&display=swap');
:root{
  /* Creating variables */
  --card-width-lg:160px;
  --card-height-lg: 220px;
  --card-horizontal-space-lg: 100px;
  
  --card-width-sm:100px;
  --card-height-sm: 150px;;
  --card-horizontal-space-sm: 50px;
  
  --num-cards: 4;
  --primary-font: 'Quicksand', sans-serif;
}

body{
  height: 100vh;
  font-family: var(--primary-font);
}

/* HEADER ELEMENTS */
header{
  display: flex;
  flex-direction: column;
  margin-bottom: 10px;
}

/* HEADER TITLE FORMATTING */
.header-title-container {
  display: flex;
  justify-content: center;
}

.header-round-info-container{
  display: flex;
  justify-content: space-evenly;
}

.current-status{
  font-size: 1.5rem;
  text-align: center;
}

.header-round-info-container,
.header-status-info-container,
.header-button-container,
.header-score-container,
.header-round-container,
.header-img-container {
  display: flex;
  justify-content: center;
  align-items: center;
}

.header-score-container,
.header-round-container,
.header-img-container {
  width: 150px;

}

.header-img{
  height: 75px;
  border-radius: 5px;
  border: 1px solid black;
  padding: 5px;
  box-shadow: 0 5px 8px 0 rgba(0,0,0,0.2);
  transform: rotate(-5deg);
}

.badge{
  background-color: lightslategray;
  color: white;
  /* border: 1px solid black; */
  border-radius: 15px;
  padding: 2px 10px 3px;
}


/* PLAY BUTTON */
.play-button-container{
  width: 150px;
  height: 70px;
}

.play-button {
  appearance: none;
  background-color: transparent;
  border: 2px solid #1A1A1A;
  border-radius: 15px;
  box-sizing: border-box;
  color: #3B3B3B;
  cursor: pointer;
  display: none;
  font-family: Roobert,-apple-system,BlinkMacSystemFont,"Segoe UI",Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol";
  font-size: 16px;
  font-weight: 600;
  line-height: normal;
  margin: 0;
  min-height: 60px;
  min-width: 0;
  outline: none;
  padding: 16px 24px;
  text-align: center;
  text-decoration: none;
  transition: all 300ms cubic-bezier(.23, 1, 0.32, 1);
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  width: 100%;
  will-change: transform;
  animation: game-play-button-fade-in 10s 1;
}

.play-button:active {
  box-shadow: none;
  transform: translateY(0);
}
@keyframes game-play-button-fade-in {
    from{opacity: 0;}
    to{opacity: 1;}
  
}

.play-button:disabled {
  pointer-events: none;
}

.play-button:hover {
  color: #fff;
  background-color: #1A1A1A;
  box-shadow: rgba(0, 0, 0, 0.25) 0 8px 15px;
  transform: translateY(-2px);
}


/* MAIN BODY ELEMENTS */
main{
  height: 55%;
  display: flex;
  justify-content: center;
  /* border: 1px solid #059665cb; */
}

.card-container{
  /* Parent container to hold the card; Used as a buffer */
  position: relative;
  height: 100%;
  width: calc(var(--card-width-lg) * (var(--num-cards)/2) + var(--card-horizontal-space-lg));
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 1fr;
  grid-template-areas: "a b "
                       "c d ";
  /* border: 1px solid #059665cb; */
}


/* CARD POSITIONS */
.card-pos-a{
  grid-area: a;
  /* border: 1px solid #059665cb; */
  /* background-color: mediumturquoise; */

}
.card-pos-b{
  grid-area: b;
  /* border: 1px solid #059665cb; */
  /* background-color: cadetblue; */
}
.card-pos-c{
  grid-area: c;
  /* border: 1px solid #059665cb; */
  /* background-color: saddlebrown; */
}
.card-pos-d{
  grid-area: d;
  /* border: 1px solid #059665cb; */
  /* background-color: burlywood; */
}

/* Centers the cards within their div containers */
.card-pos-a, .card-pos-b, .card-pos-c, .card-pos-d {
  display: flex;
  justify-content: center;
  align-items: center;
}

/* CARD DESIGNS AND STYLING */
.card{
  /* Holds the card-front and card-back classes */
  position: absolute;
  height: var(--card-height-lg);
  width: var(--card-width-lg);
  /* Sets how far the camera is set for the transition */
    /* Try adding and removing 0's (and also increase the transform time): */
  perspective: 1000px;
  cursor: pointer;
  transition: transform 0.85s ease-in-out;
}

.card-inner{
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 1.25s;
  transform-style: preserve-3d;
}

.card-front, .card-back {
  /* Stacking the card back with the card front */
    /* Try switching position to "relative" and see what happens: */
  position: absolute;
  width: 100%;
  height: 100%;
  /* Hides the back of the card from view */
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;

  /* Try using these lines instead and see what happens: */
  /* -webkit-backface-visibility: visible; */
  /* backface-visibility: visible; */
}

.card-img {
  height: 100%;
}

.card-back{
  transform: rotateY(180deg);
}

/* CARD HOVER BEHAVIOR */
/* .card:hover .card-inner{
  transform: rotateY(180deg);
} */

/* CARD ANIMATION CLASSES */
.card-inner.flip-it{
  transform: rotateY(180deg);
}

.card.shuffle-left{
  transform: translateX(300px) translateY(30px);
}
.card.shuffle-right{
  transform: translateX(-300px) translateY(-30px);
}

.card.fly-in{
  transform: translateY(-1000px) translateX(-600px) rotate(45deg);
}

/* Responsive Layouts */
@media screen and (max-width: 750px){
    .card{
      width: var(--card-width-sm);
      height: var(--card-height-sm);
    }
    .card-container{
      width: calc(var(--card-width-sm) * (var(--num-cards)/2) + var(--card-horizontal-space-sm));
    }
    main{
      height: 50%;
    }
    .current-status{
      font-size: 1.2rem;
    }
    .play-button-container{
      width: 120px;
      height: 40px;
    }
    #playGame{
      padding: 6px 8px;
      font-size: 12px;
      min-height: 40px;
    }
    .header-img{
      height: 55px;
    }
}
